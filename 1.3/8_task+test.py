""" Искусственный интеллект для Оксаны
Оксана работает бухгалтером и каждый день выгружает из компьютера сводку за прошедшие сутки, которая содержит все приходы и расходы организации и итог. В сводке записаны только целые числа, и точно известно, что самое последнее число есть сумма всех предыдущих чисел.
Например, варианты сводок:
100 -50 10 -25 90 -35 90
5 -25 10 -35 -45
Эти сводки Оксана красиво оформляет в отчёте так:
+100 - 50 + 10 - 25 + 90 - 35 = +90
или так:
+5 - 25 + 10 - 35 = -45
Но однажды, придя на работу, Оксана обнаружила, что компьютер заразился вирусом и принялся из вредности путать числа в сводке. Например, вместо
5 -25 10 -35 -45 
он выдаёт явно ошибочное
10 -25 -45 -35 5
!
Оксана попросила программиста Олега, специализирующегося на искусственном интеллекте, помочь ей срочно подготовить правильные отчёты. Помогите Оксане -- напишите алгоритм, который будет находить в сводке число, равное сумме всех остальных чисел.
Функция
int SumOfThe(int N, int [] data)
получает параметром N длину всей сводки (N >= 2), и далее в массиве длиной N хранится сама сводка (целые числа).
Возвращает функция целое число из сводки, которое равно сумме всех остальных чисел. """

# Рефлексия:
# С одной стороны кажется, что задача простая, немного математики и я уже знаю, что искомое число, это сумма всех чисел, деленное на два.
# По этой формуле считаем сумму, делим на 2 , получаем число, а потом с помощью метода find находим это число. Вопрос, стоит ли проверять условия?
# дополняю что метод find Только для строки(у нас массив) 

# def SumofThe(N, data):
#     j = 0
#     for i in range (N):
#         j += data[i]
#     R = j / 2
#     print(R)
#     total = summ(data)
#     result = [x for x in data if x == (summ(data) %2)] - неверно

""" def SumOfThe(N,data):
    total = sum(data)
    for element in data:
        if 2* element == total:
            return element
    return None  """# по условию не возможно, поэтому удалаем. одно из решений, попробуем избавится от оператора if
""" def SumOfThe(N,data): # неявное использование булевой математики
    total = sum(data)
    result = 0
    for x in data:
        if 2 * x == total
        return x
    return 0 """

# и еще проще можно сделать
def SumOfThe(N,data):
    return sum(data) // 2
print(SumOfThe(7,[100, -50, 10, -25, 90, -35, 90]))
print(SumOfThe(5,[10,-25, -45, -35, 5]))
print(SumOfThe(4, [100, 20, 30, 150]))
print(SumOfThe(3, [-10, 20, 10]))
print(SumOfThe(4, [5, 5, 10, 10]))
print(SumOfThe(3, [0, 0, 0]))
print(SumOfThe(3, [1000000, 2000000, 3000000]))