""" Райнехарт и мистер Андерсон
РАЙНЕХАРТ
Наша компания - ведущая компания по разработке программного обеспечения в мире. И это все благодаря тому, что каждый отдельный служащий понимает, что он - часть целого. Таким образом, если служащий имеет проблему, это означает, что вся компания имеет проблему.
Пока ваша самая большая проблема, мистер Андерсон, что вы не выполнили в срок рабочее задание.
Пришло время делать выбор, мистер Андерсон. Либо вы сейчас же реализуете вычисление разностей BigInteger, либо вы будете вынуждены искать другую работу. Я ясно выражаюсь?
Требуется вычислить разницу между двумя целыми неотрицательными числами, заданными своим строковым представлением (например, "1234567890" и "321").
Числа задаются в диапазоне от 0 до 10^16 (включительно).
В некоторых языках есть поддержка так называемых BigInteger, которые потенциально не ограничены диапазонами, однако арифметические операции над ними выполняются не процессором, а эмуляционным кодом. По сути, для этих операций просто вызываются функции стандартных библиотек.
Возможно, в выбранном вами языке имеется поддержка BigInteger, однако в данной миссии надо обойтись без них.
Придумайте, как вычислять разность для любых заданных значений.
Функция
string BigMinus(string s1, string s2)
получает на вход два числа в формате строки (числа всегда корректные -- набор цифр), и возвращает абсолютное значение (модуль) разности -- первое число s1 минус второе число s2, также в формате строки.
Например,
BigMinus("1234567891", "1") = "1234567890"
BigMinus("1", "321") = "320" """
""" Рефлексируем: 
    С одной стороны задача кажется очень простой - нужно переделать значение в инт и посчитать разность, если отрицательное значение - сделать минус результат проверку.
Но у нас описание задачи слишеом крупное и числа большие, поэтому простое решение отметаем сразу, т.к. возможны ошибки при расчете больших чисел.
Начнем с того, что нам необходимо узнать самое длинное число по строке и по смыслу, затем наименьшее число надо доплнить нулями.
Это нужно для того, тобы проходить по числу с конца и делать вычитание простых чисел(у нас же большие цифры, тогда ошибки про обработке больших чисел не будет)
Далее добавляем каждую разницу в список и переводим значение в строку, переворачиваем ее, а затем избавляемся от лишних нолей """
def BigMinus(s1, s2): 
    check_lengh = len(s1) < len(s2) or (len(s1) == len(s2) and s1 < s2) # Определяем большее число
    a, b = ((s1, s2), (s2, s1))[check_lengh]
    b = b.zfill(len(a)) # Дополняем меньшее число нулями
    list = []
    debt = 0
    for i in range(len(a)-1, -1, -1): # Вычитаем справа налево
        digit = int(a[i]) - int(b[i]) - debt
        debt = digit < 0
        digit += debt * 10 # Переходим на следующий разряд
        list.append(str(digit))
    result = ''.join(reversed(list)) # Переворачиваем
    result = result.lstrip('0') # убираем нули
    return result  or '0' #  нужно ли тут ноль выставлять, чтобы None не получилось - нужно!! при вычитании например 100-100 пулучится 0
print(BigMinus("1234567891","1"))
print(BigMinus("1","321"))
print(BigMinus("100","100"))